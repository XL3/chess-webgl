{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-fa8eee4c983f19b6.js","node_modules/@parcel/runtime-js/lib/runtime-ce5803ff32b8dcd1.js","node_modules/@parcel/runtime-js/lib/runtime-4181012e7627ce0d.js","node_modules/@parcel/runtime-js/lib/runtime-95348c4d6bf8bcc7.js","node_modules/@parcel/runtime-js/lib/runtime-c6b7f89429220b98.js","node_modules/@parcel/runtime-js/lib/runtime-75867d14c9c53a21.js","src/Renderer/Shader.ts","shaders/texture.vert","shaders/texture.frag","src/Renderer/Mesh_Square.ts","src/Renderer/Texture.ts","src/Renderer/Matrix.ts","src/Chess/Piece.ts","src/Renderer/Renderer.ts","src/Chess/Chess_Squares.ts","src/Chess/Chess.ts","src/app.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fk6R8\\\":\\\"index.59623b2c.js\\\",\\\"bxDSp\\\":\\\"board-white.afa74973.png\\\",\\\"fk2Wh\\\":\\\"board-black.7ca8e89e.png\\\",\\\"e3rII\\\":\\\"chess-pieces.de908b13.png\\\",\\\"38Img\\\":\\\"dot.7f3be977.png\\\",\\\"fyaqV\\\":\\\"outline.f9ed6cbb.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bxDSp\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fk2Wh\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"e3rII\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"38Img\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fyaqV\")).toString();","class Shader {\r\n  private static async compile(gl: WebGL2RenderingContext, type: number, source: string): Promise<WebGLShader> {\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      alert(`An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`);\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n\r\n    return shader;\r\n  };\r\n\r\n  static async create_program(gl: WebGL2RenderingContext, shader: { vertex: string, fragment: string }): Promise<WebGLProgram> {\r\n    const vertex_shader = await Shader.compile(gl, gl.VERTEX_SHADER, shader.vertex);\r\n    const fragment_shader = await Shader.compile(gl, gl.FRAGMENT_SHADER, shader.fragment);\r\n\r\n    const shader_program = gl.createProgram();\r\n    gl.attachShader(shader_program, vertex_shader);\r\n    gl.attachShader(shader_program, fragment_shader);\r\n    gl.linkProgram(shader_program);\r\n\r\n    if (!gl.getProgramParameter(shader_program, gl.LINK_STATUS)) {\r\n      alert(`Unable to initialize the shader program: ${gl.getProgramInfoLog(shader_program)}`);\r\n      return null;\r\n    }\r\n\r\n    return shader_program;\r\n  }\r\n};\r\n\r\nconst shaders = {\r\n  texture: {\r\n    // @ts-ignore\r\n    vertex: require('/shaders/texture.vert'),\r\n    // @ts-ignore\r\n    fragment: require('/shaders/texture.frag'),\r\n  }\r\n};\r\n\r\nexport { Shader, shaders };\r\n","#version 300 es\r\nlayout(location=0) in vec2 position;\r\nlayout(location=1) in vec2 texture_uv;\r\n\r\nuniform mat4 model;\r\nuniform mat4 view;\r\nuniform mat4 projection;\r\n\r\nout vec2 texture_uvs;\r\n\r\nvoid main() {\r\n  texture_uvs = texture_uv;\r\n\r\n  vec4 pos = vec4(position, 0.0f, 1.0f);\r\n  gl_Position = projection * view * model * pos;\r\n}","#version 300 es\r\nprecision highp float;\r\n\r\nin vec2 texture_uvs;\r\nuniform sampler2D texture_sampler;\r\n\r\nuniform float time;\r\nout vec4 color;\r\n\r\nvoid main() {\r\n  color = texture(texture_sampler, texture_uvs);\r\n}","export default class Mesh_Square {\r\n  gl: WebGL2RenderingContext;\r\n  vao: WebGLVertexArrayObject;\r\n  count: number;\r\n  type: number;\r\n\r\n  constructor(gl: WebGL2RenderingContext, shader_program: WebGLProgram) {\r\n    this.gl = gl;\r\n    this.vao = gl.createVertexArray();\r\n    gl.bindVertexArray(this.vao);\r\n\r\n    const side = 1;\r\n    const position = {\r\n      location: gl.getAttribLocation(shader_program, 'position'),\r\n      buffer: gl.createBuffer(),\r\n      data: new Float32Array([\r\n        -side / 2, -side / 2,\r\n        side / 2, -side / 2,\r\n        side / 2, side / 2,\r\n        -side / 2, side / 2\r\n      ]),\r\n    };\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, position.buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, position.data, gl.STATIC_DRAW);\r\n    gl.enableVertexAttribArray(position.location);\r\n    gl.vertexAttribPointer(position.location, 2, gl.FLOAT, false, 0, 0);\r\n\r\n    const texture_uv = {\r\n      location: gl.getAttribLocation(shader_program, 'texture_uv'),\r\n      buffer: gl.createBuffer(),\r\n      data: new Uint32Array([\r\n        0, 1,\r\n        1, 1,\r\n        1, 0,\r\n        0, 0\r\n      ]),\r\n    };\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, texture_uv.buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, texture_uv.data, gl.STATIC_DRAW);\r\n    gl.enableVertexAttribArray(texture_uv.location);\r\n    gl.vertexAttribPointer(texture_uv.location, 2, gl.UNSIGNED_INT, false, 0, 0);\r\n\r\n\r\n    const elements = {\r\n      buffer: gl.createBuffer(),\r\n      data: new Int32Array([\r\n        0, 1, 2,\r\n        2, 3, 0\r\n      ]),\r\n    };\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elements.buffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, elements.data, gl.STATIC_DRAW);\r\n\r\n    this.count = elements.data.length;\r\n    this.type = gl.UNSIGNED_INT;\r\n  }\r\n\r\n  draw(): void {\r\n    this.gl.bindVertexArray(this.vao);\r\n    this.gl.drawElements(this.gl.TRIANGLES, this.count, this.type, 0);\r\n  }\r\n};","export interface Texture_Image {\r\n  element: TexImageSource;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport class Texture {\r\n  texture: WebGLTexture;\r\n  gl: WebGL2RenderingContext;\r\n\r\n  private static uploadTextureImage(gl: WebGL2RenderingContext, image: Texture_Image) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const img = image.element as HTMLImageElement;\r\n\r\n    ctx.drawImage(img, image.x, image.y, image.width, image.height, 0, 0, image.width, image.height);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,\r\n      image.width, image.height, 0,\r\n      gl.RGBA, gl.UNSIGNED_BYTE, canvas);\r\n  }\r\n\r\n  // TODO(Abdelrahman) Proper texture extraction\r\n  constructor(gl: WebGL2RenderingContext, image?: Texture_Image) {\r\n    this.gl = gl;\r\n    this.texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\r\n    if (image) {\r\n      Texture.uploadTextureImage(gl, image);\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\r\n        new Uint8Array([0, 0, 255, 255]));\r\n    }\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n  }\r\n\r\n  bind(slot: number, sampler_location: WebGLUniformLocation) {\r\n    this.gl.activeTexture(this.gl.TEXTURE0 + slot);\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\r\n\r\n    this.gl.uniform1i(sampler_location, slot);\r\n  }\r\n}","export type Ortho_Tuple = {\r\n  left: number;\r\n  right: number;\r\n  top: number;\r\n  bottom: number;\r\n  near: number;\r\n  far: number;\r\n};\r\n\r\nexport type Translate_Tuple = {\r\n  x: number,\r\n  y: number\r\n};\r\n\r\nexport class Matrix {\r\n  static identity: Float32Array = new Float32Array([\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1,\r\n  ]);\r\n\r\n  static scale(factor: number, mat: Float32Array = Matrix.identity) {\r\n    const scaled = mat.map((x: number) => factor * x);\r\n    scaled[3] = scaled[7] = scaled[11] = 0;\r\n    scaled[15] = 1;\r\n    return scaled;\r\n  }\r\n\r\n  static orthographic(tuple: Ortho_Tuple): Float32Array {\r\n    let { left, right, top, bottom, near, far } = tuple;\r\n\r\n    // if (aspect_ratio > 1) {\r\n    //   left *= aspect_ratio;\r\n    //   right *= aspect_ratio;\r\n    // } else {\r\n    //   bottom *= 1 / aspect_ratio;\r\n    //   top *= 1 / aspect_ratio;\r\n    // }\r\n\r\n    return new Float32Array([\r\n      2 / (right - left), 0, 0, (left + right) / (left - right),\r\n      0, 2 / (top - bottom), 0, (bottom + top) / (bottom - top),\r\n      0, 0, 2 / (near - far), (near + far) / (near - far),\r\n      0, 0, 0, 1,\r\n    ]);\r\n  }\r\n\r\n  static translate(t: Translate_Tuple, mat: Float32Array = Matrix.identity): Float32Array {\r\n    let translated = mat;\r\n    translated[3] = t.x;\r\n    translated[7] = t.y;\r\n    return translated;\r\n  }\r\n\r\n  static rotate(theta: number, axis: number = 3): Float32Array {\r\n    let c = Math.cos(theta);\r\n    let s = Math.sin(theta);\r\n\r\n    // Rotation matrix\r\n    switch (axis) {\r\n      case 0:\r\n        return new Float32Array([\r\n          1, 0, 0, 0,\r\n          0, c, -s, 0,\r\n          0, s, s, 0,\r\n          0, 0, 0, 1,\r\n        ]);\r\n\r\n      case 1:\r\n        return new Float32Array([\r\n          c, 0, s, 0,\r\n          0, 1, 0, 0,\r\n          -s, 0, c, 0,\r\n          0, 0, 0, 1,\r\n        ]);\r\n\r\n      case 2:\r\n        return new Float32Array([\r\n          c, -s, 0, 0,\r\n          s, c, 0, 0,\r\n          0, 0, 1, 0,\r\n          0, 0, 0, 1,\r\n        ]);\r\n\r\n      default:\r\n        return this.identity;\r\n    }\r\n  }\r\n}","export enum Color {\r\n    White,\r\n    Black,\r\n}\r\n\r\nexport enum Type {\r\n    King,\r\n    Queen,\r\n    Bishop,\r\n    Knight,\r\n    Rook,\r\n    Pawn,\r\n    COUNT,\r\n}\r\n\r\nexport enum Augment {\r\n    blank,\r\n    dot,\r\n    outline,\r\n}\r\n\r\nexport type Augment_Square = {\r\n    file: number,\r\n    rank: number,\r\n    augment: Augment\r\n}\r\n\r\nexport class Square {\r\n    file: number;\r\n    rank: number;\r\n\r\n    get i() {\r\n        return Square.coordinatesToIndex(this.file, this.rank);\r\n    }\r\n\r\n    constructor(square: string = '') {\r\n        if (square == '') {\r\n            square = 'a1';\r\n        }\r\n        this.fromString(square);\r\n    }\r\n\r\n    static coordinatesToString(file: number, rank: number): string {\r\n        let f = 'a'.charCodeAt(0) + file;\r\n        let r = 1 + rank;\r\n        return `${String.fromCharCode(f)}${r}`;\r\n    }\r\n\r\n    static stringToIndex(square: string): number {\r\n        let file = square[0].charCodeAt(0) - 'a'.charCodeAt(0);\r\n        let rank = square[1].charCodeAt(0) - '1'.charCodeAt(0);\r\n\r\n        return Square.coordinatesToIndex(file, rank);\r\n    }\r\n\r\n    static coordinatesToIndex(file: number, rank: number): number {\r\n        return file * 8 + rank;\r\n    }\r\n\r\n    fromCoordinates(file: number, rank: number) {\r\n        this.file = file;\r\n        this.rank = rank;\r\n    }\r\n\r\n    fromString(square: string) {\r\n        this.file = square[0].charCodeAt(0) - 'a'.charCodeAt(0);\r\n        this.rank = square[1].charCodeAt(0) - '1'.charCodeAt(0);\r\n    }\r\n\r\n    toString(): string {\r\n        return Square.coordinatesToString(this.file, this.rank);\r\n    }\r\n\r\n    compare(sq: Square): boolean {\r\n        if (!sq) return false;\r\n        return this.file == sq.file && this.rank == sq.rank;\r\n    }\r\n\r\n    coincideLaterally(sq: Square): boolean {\r\n        let coin = false;\r\n\r\n        coin = coin || this.file == sq.file;\r\n        coin = coin || this.rank == sq.rank;\r\n        return coin;\r\n    }\r\n\r\n    static mainDiagonal(sq: Square): number {\r\n        return sq.rank - sq.file;\r\n    }\r\n\r\n    static secDiagonal(sq: Square): number {\r\n        return sq.rank + sq.file;\r\n    }\r\n\r\n    coincideDiagonally(sq: Square): boolean {\r\n        let coin = false;\r\n\r\n        coin = coin || Square.mainDiagonal(this) == Square.mainDiagonal(sq);\r\n        coin = coin || Square.secDiagonal(this) == Square.secDiagonal(sq);\r\n        return coin;\r\n    }\r\n}\r\n\r\nexport class Piece {\r\n    square: Square;\r\n    color: Color;\r\n    type: Type;\r\n\r\n    constructor(square: string, color: Color, type: Type) {\r\n        this.square = new Square(square);\r\n        this.color = color;\r\n        this.type = type;\r\n    }\r\n\r\n    isPseudoLegal(sq: Square): boolean {\r\n        switch (this.type) {\r\n            case Type.King:\r\n                return this.processKing(sq);\r\n            case Type.Queen:\r\n                return this.processQueen(sq);\r\n            case Type.Knight:\r\n                return this.processKnight(sq);\r\n            case Type.Bishop:\r\n                return this.processBishop(sq);\r\n            case Type.Rook:\r\n                return this.processRook(sq);\r\n            case Type.Pawn:\r\n                return this.processPawn(sq);\r\n            default: break;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    processKing(sq: Square): boolean {\r\n        const df = (sq: Square) => Math.abs(this.square.file - sq.file);\r\n        const dr = (sq: Square) => Math.abs(this.square.rank - sq.rank);\r\n        if (dr(sq) > 1) return false;\r\n\r\n        if (df(sq) <= 1)\r\n            return true;\r\n\r\n        // White\r\n        // On first rank\r\n        if (this.color == Color.White && this.square.rank == 0) {\r\n            if (df(sq) == 2)\r\n                return true;\r\n        }\r\n\r\n        // Black\r\n        // On eighth rank\r\n        if (this.color == Color.Black && this.square.rank == 7) {\r\n            if (df(sq) == 2)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    processQueen(sq: Square): boolean {\r\n        return this.square.coincideDiagonally(sq) || this.square.coincideLaterally(sq);\r\n    }\r\n\r\n    processKnight(sq: Square): boolean {\r\n        const drank = [1, 2, 2, 1, -1, -2, -2, -1];\r\n        const dfile = [2, 1, -1, -2, -2, -1, 1, 2];\r\n\r\n        let coin = false;\r\n\r\n        for (let i = 0; i < drank.length; i++) {\r\n            coin = (sq.rank - this.square.rank) == drank[i];\r\n            coin = coin && (sq.file - this.square.file) == dfile[i];\r\n\r\n            if (coin) return true;\r\n        }\r\n        return false;\r\n    }\r\n    processBishop(sq: Square): boolean {\r\n        return this.square.coincideDiagonally(sq);\r\n    }\r\n    processRook(sq: Square): boolean {\r\n        return this.square.coincideLaterally(sq);\r\n    }\r\n    processPawn(sq: Square): boolean {\r\n        // White pawns advance forward in ranks\r\n        let direction = this.color == Color.White ? 1 : -1;\r\n        let starting = this.color == Color.White ? 1 : 6;\r\n\r\n        const isStartingAdvance = (sq: Square) => this.square.rank == starting && sq.rank == starting + 2 * direction;\r\n        const isNormalAdvance = (sq: Square) => sq.rank - this.square.rank == direction;\r\n\r\n        const isLegal = (sq: Square) => Math.abs(sq.file - this.square.file) <= 1;\r\n        const isCapture = (sq: Square) => Math.abs(sq.file - this.square.file) == 1;\r\n\r\n        let coin = false;\r\n        coin = coin || isStartingAdvance(sq) && !isCapture(sq);\r\n        coin = coin || isNormalAdvance(sq);\r\n\r\n        // Other advances\r\n        return coin && isLegal(sq);\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.square}] ${Color[this.color]} ${Type[this.type]}`;\r\n    }\r\n}\r\n\r\nexport type Board = Array<Piece>;","// @ts-ignore\r\nimport board_white_url from \"/assets/board-white.png\";\r\n// @ts-ignore\r\nimport board_black_url from \"/assets/board-black.png\";\r\n// @ts-ignore\r\nimport piece_url from \"/assets/chess-pieces.png\";\r\n// @ts-ignore\r\nimport dot_url from \"/assets/dot.png\";\r\n// @ts-ignore\r\nimport outline_url from \"/assets/outline.png\";\r\n\r\nimport { Shader, shaders } from \"./Shader\";\r\nimport Mesh_Square from \"./Mesh_Square\";\r\nimport { Texture, Texture_Image } from \"./Texture\";\r\nimport { Translate_Tuple, Matrix } from \"./Matrix\";\r\n\r\nimport {\r\n    Square,\r\n    Type,\r\n    Color,\r\n    Piece,\r\n    Augment_Square,\r\n    Augment,\r\n    Board\r\n} from \"../Chess/Piece\";\r\n\r\nexport default class Renderer {\r\n    static BOARD_SIZE: number = 640;\r\n    static SQUARE_SIZE: number = 640 / 8;\r\n\r\n    gl: WebGL2RenderingContext;\r\n    canvas: HTMLCanvasElement;\r\n    shader_program: WebGLShader;\r\n    board: Board;\r\n    turn: Color;\r\n    augments: Augment_Square[];\r\n\r\n    uniforms: {\r\n        projection: WebGLUniformLocation,\r\n        texture_sampler: WebGLUniformLocation,\r\n        model: WebGLUniformLocation,\r\n        view: WebGLUniformLocation,\r\n        time: WebGLUniformLocation,\r\n    }\r\n\r\n    matrices: {\r\n        model: Float32Array;\r\n        view: Float32Array;\r\n        projection: Float32Array;\r\n    }\r\n\r\n    last_update: number;\r\n    time_elapsed: number;\r\n    dt: number;\r\n    move_delay: number;\r\n\r\n    square: Mesh_Square;\r\n    textures: {\r\n        board: Texture[];\r\n        pieces: Texture[][];\r\n        dot: Texture;\r\n        outline: Texture;\r\n    };\r\n\r\n    held_piece: Piece;\r\n    held_at: Translate_Tuple;\r\n\r\n    findSquare(x: number, y: number): Square {\r\n        const dim = Renderer.getMinimumDimension();\r\n\r\n        // Board starts at bottom\r\n        let rank = Math.floor(8 * y / dim);\r\n        rank = this.turn == Color.White ? 7 - rank : rank;\r\n\r\n        let file = Math.floor(8 * x / dim);\r\n        file = this.turn == Color.Black ? 7 - file : file;\r\n\r\n        const sq = new Square();\r\n        sq.fromCoordinates(file, rank);\r\n\r\n        return sq;\r\n    }\r\n\r\n    prepareSquare(sq: Augment_Square, t: Translate_Tuple = null): Float32Array {\r\n        // Offset to lower left square\r\n        let translate = { x: -4 * Renderer.SQUARE_SIZE, y: -4 * Renderer.SQUARE_SIZE };\r\n\r\n        if (t) {\r\n            translate.x += t.x;\r\n            translate.y += t.y;\r\n            translate.y = -translate.y;\r\n        } else {\r\n            // Offset to middle of lower left square\r\n            translate.x += Renderer.SQUARE_SIZE * (sq.file + 0.5);\r\n            translate.y += Renderer.SQUARE_SIZE * (sq.rank + 0.5);\r\n\r\n            if (this.turn == Color.Black) {\r\n                translate.y = -translate.y;\r\n                translate.x = -translate.x;\r\n            }\r\n        }\r\n\r\n        let model = Matrix.scale(Renderer.SQUARE_SIZE);\r\n        model = Matrix.translate(translate, model);\r\n        return model;\r\n    }\r\n\r\n    drawBoard(augments: Augment_Square[]) {\r\n        this.matrices.model = Matrix.scale(Renderer.BOARD_SIZE);\r\n\r\n        this.textures.board[this.turn].bind(0, this.uniforms.texture_sampler);\r\n        this.gl.uniformMatrix4fv(this.uniforms.model, true, this.matrices.model);\r\n        this.square.draw();\r\n\r\n        augments.forEach(augment => {\r\n            this.matrices.model = this.prepareSquare(augment);\r\n            switch (augment.augment) {\r\n                case Augment.dot:\r\n                    this.textures.dot.bind(0, this.uniforms.texture_sampler);\r\n                    break;\r\n                case Augment.outline:\r\n                    this.textures.outline.bind(0, this.uniforms.texture_sampler);\r\n                    break;\r\n                default: return;\r\n            }\r\n            this.gl.uniformMatrix4fv(this.uniforms.model, true, this.matrices.model);\r\n            this.square.draw();\r\n        });\r\n    }\r\n\r\n    drawPiece(piece: Piece, sq: Square) {\r\n        let t = this.held_piece && piece == this.held_piece ? this.held_at : null;\r\n\r\n        const asq: Augment_Square = { file: sq.file, rank: sq.rank, augment: null };\r\n        let model = this.prepareSquare(asq, t);\r\n        this.textures.pieces[piece.color][piece.type].bind(0, this.uniforms.texture_sampler);\r\n\r\n        this.matrices.model = model;\r\n        this.gl.uniformMatrix4fv(this.uniforms.model, true, this.matrices.model);\r\n        this.square.draw();\r\n    }\r\n\r\n    render() {\r\n        this.dt = Date.now() - this.last_update;\r\n        this.last_update = Date.now();\r\n        this.time_elapsed += this.dt / 1000;\r\n        this.gl.uniform1f(this.uniforms.time, this.time_elapsed);\r\n\r\n        this.gl.clearColor(0, 0, 0, 1);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        this.drawBoard(this.augments);\r\n        for (let p of this.board) {\r\n            if (p && this.held_piece != p) {\r\n                this.drawPiece(p, p.square);\r\n            }\r\n        }\r\n        if (this.held_piece) {\r\n            this.drawPiece(this.held_piece, this.held_piece.square);\r\n        }\r\n\r\n        window.requestAnimationFrame(() => this.render());\r\n    }\r\n\r\n    async loadTextures() {\r\n        const board_white_img = await Renderer.loadImage(board_white_url);\r\n        const board_black_img = await Renderer.loadImage(board_black_url);\r\n        const piece_img = await Renderer.loadImage(piece_url);\r\n        const dot_img = await Renderer.loadImage(dot_url);\r\n        const outline_img = await Renderer.loadImage(outline_url);\r\n\r\n        let images: Texture_Image[][] = [\r\n            new Array<Texture_Image>(Type.COUNT),\r\n            new Array<Texture_Image>(Type.COUNT),\r\n        ];\r\n\r\n        const SQUARE_SIZE = Renderer.BOARD_SIZE / 8;\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 0; j < Type.COUNT; j++) {\r\n                images[i][j] = {\r\n                    element: piece_img,\r\n                    x: j * SQUARE_SIZE,\r\n                    y: i * SQUARE_SIZE,\r\n                    width: SQUARE_SIZE,\r\n                    height: SQUARE_SIZE,\r\n                };\r\n            }\r\n        }\r\n\r\n        this.textures = {\r\n            board: [\r\n                new Texture(this.gl, {\r\n                    element: board_white_img,\r\n                    x: 0, y: 0,\r\n                    width: board_white_img.width, height: board_white_img.height\r\n                }),\r\n                new Texture(this.gl, {\r\n                    element: board_black_img,\r\n                    x: 0, y: 0,\r\n                    width: board_black_img.width, height: board_black_img.height\r\n                })\r\n            ],\r\n\r\n            pieces: [\r\n                images[Color.White].map((image) => new Texture(this.gl, image)),\r\n                images[Color.Black].map((image) => new Texture(this.gl, image)),\r\n            ],\r\n\r\n            dot: new Texture(this.gl, {\r\n                element: dot_img,\r\n                x: 0, y: 0,\r\n                width: dot_img.width, height: dot_img.height\r\n            }),\r\n\r\n            outline: new Texture(this.gl, {\r\n                element: outline_img,\r\n                x: 0, y: 0,\r\n                width: outline_img.width, height: outline_img.height\r\n            }),\r\n        }\r\n    }\r\n\r\n    async init() {\r\n        // Initialize shaders\r\n        this.shader_program = await Shader.create_program(this.gl, shaders.texture);\r\n        if (!this.shader_program) {\r\n            throw new Error('Failed to create shader program');\r\n        } else {\r\n            this.gl.useProgram(this.shader_program);\r\n        }\r\n\r\n        // Set uniforms\r\n        this.uniforms = {\r\n            projection: this.gl.getUniformLocation(this.shader_program, 'projection'),\r\n            texture_sampler: this.gl.getUniformLocation(this.shader_program, 'texture_sampler'),\r\n            model: this.gl.getUniformLocation(this.shader_program, 'model'),\r\n            view: this.gl.getUniformLocation(this.shader_program, 'view'),\r\n            time: this.gl.getUniformLocation(this.shader_program, 'time'),\r\n        }\r\n\r\n        // Upload uniforms\r\n        this.matrices = {\r\n            model: Matrix.identity,\r\n            view: Matrix.identity,\r\n            projection: Matrix.orthographic({\r\n                left: -Renderer.BOARD_SIZE / 2,\r\n                right: Renderer.BOARD_SIZE / 2,\r\n                top: Renderer.BOARD_SIZE / 2,\r\n                bottom: -Renderer.BOARD_SIZE / 2,\r\n                near: 0,\r\n                far: 1\r\n            }),\r\n        }\r\n        this.gl.uniformMatrix4fv(this.uniforms.model, true, this.matrices.model);\r\n        this.gl.uniformMatrix4fv(this.uniforms.view, true, this.matrices.view);\r\n        this.gl.uniformMatrix4fv(this.uniforms.projection, true, this.matrices.projection);\r\n\r\n        // Create textures and meshes\r\n        this.square = new Mesh_Square(this.gl, this.shader_program);\r\n        await this.loadTextures();\r\n    }\r\n\r\n    resize() {\r\n        const dim = Renderer.getMinimumDimension();\r\n\r\n        this.gl.viewport(0, 0, dim, dim);\r\n\r\n        this.canvas.width = dim;\r\n        this.canvas.height = dim;\r\n    }\r\n\r\n    startRendering() {\r\n        // Begin render loop\r\n        window.requestAnimationFrame(() => this.render());\r\n    }\r\n\r\n    static async loadImage(path: string): Promise<HTMLImageElement> {\r\n        return new Promise<HTMLImageElement>(\r\n            (resolve, reject) => {\r\n                const image = new Image();\r\n                image.src = path;\r\n                image.onload = () => resolve(image);\r\n                image.onerror = () => reject(new Error('Failed to load image'));\r\n            });\r\n    }\r\n\r\n    static getMinimumDimension(): number {\r\n        let width = (window.innerWidth > 0) ? window.innerWidth : screen.width;\r\n        let height = (window.innerHeight > 0) ? window.innerHeight : screen.height;\r\n\r\n        width *= 0.8;\r\n        height *= 0.8;\r\n\r\n        return Math.min(width, height, Renderer.BOARD_SIZE);\r\n    }\r\n\r\n    constructor(canvas: HTMLCanvasElement, board: Board) {\r\n        // Request WebGL context\r\n        const gl = canvas.getContext(\"webgl2\", {\r\n            preserveDrawingBuffer: true,\r\n            alpha: true,\r\n            antialias: true,\r\n            depth: true,\r\n            powerPreference: \"high-performance\",\r\n            premultipliedAlpha: false,\r\n            stencil: true\r\n        });\r\n\r\n\r\n        if (!gl) return null;\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.enable(gl.BLEND);\r\n\r\n        this.gl = gl;\r\n        this.canvas = canvas;\r\n        this.dt = this.time_elapsed = this.last_update = 0;\r\n        this.augments = [];\r\n\r\n        this.board = board;\r\n        this.resize();\r\n    }\r\n}","import { Square } from \"../Chess/Piece\";\nconst tfm = Square.stringToIndex;\nenum Chess_Squares {\n    a1 = tfm(\"a1\"),\n    a2 = tfm(\"a2\"),\n    a3 = tfm(\"a3\"),\n    a4 = tfm(\"a4\"),\n    a5 = tfm(\"a5\"),\n    a6 = tfm(\"a6\"),\n    a7 = tfm(\"a7\"),\n    a8 = tfm(\"a8\"),\n    b1 = tfm(\"b1\"),\n    b2 = tfm(\"b2\"),\n    b3 = tfm(\"b3\"),\n    b4 = tfm(\"b4\"),\n    b5 = tfm(\"b5\"),\n    b6 = tfm(\"b6\"),\n    b7 = tfm(\"b7\"),\n    b8 = tfm(\"b8\"),\n    c1 = tfm(\"c1\"),\n    c2 = tfm(\"c2\"),\n    c3 = tfm(\"c3\"),\n    c4 = tfm(\"c4\"),\n    c5 = tfm(\"c5\"),\n    c6 = tfm(\"c6\"),\n    c7 = tfm(\"c7\"),\n    c8 = tfm(\"c8\"),\n    d1 = tfm(\"d1\"),\n    d2 = tfm(\"d2\"),\n    d3 = tfm(\"d3\"),\n    d4 = tfm(\"d4\"),\n    d5 = tfm(\"d5\"),\n    d6 = tfm(\"d6\"),\n    d7 = tfm(\"d7\"),\n    d8 = tfm(\"d8\"),\n    e1 = tfm(\"e1\"),\n    e2 = tfm(\"e2\"),\n    e3 = tfm(\"e3\"),\n    e4 = tfm(\"e4\"),\n    e5 = tfm(\"e5\"),\n    e6 = tfm(\"e6\"),\n    e7 = tfm(\"e7\"),\n    e8 = tfm(\"e8\"),\n    f1 = tfm(\"f1\"),\n    f2 = tfm(\"f2\"),\n    f3 = tfm(\"f3\"),\n    f4 = tfm(\"f4\"),\n    f5 = tfm(\"f5\"),\n    f6 = tfm(\"f6\"),\n    f7 = tfm(\"f7\"),\n    f8 = tfm(\"f8\"),\n    g1 = tfm(\"g1\"),\n    g2 = tfm(\"g2\"),\n    g3 = tfm(\"g3\"),\n    g4 = tfm(\"g4\"),\n    g5 = tfm(\"g5\"),\n    g6 = tfm(\"g6\"),\n    g7 = tfm(\"g7\"),\n    g8 = tfm(\"g8\"),\n    h1 = tfm(\"h1\"),\n    h2 = tfm(\"h2\"),\n    h3 = tfm(\"h3\"),\n    h4 = tfm(\"h4\"),\n    h5 = tfm(\"h5\"),\n    h6 = tfm(\"h6\"),\n    h7 = tfm(\"h7\"),\n    h8 = tfm(\"h8\"),\n};\n\nexport default Chess_Squares;\n","import Renderer from \"../Renderer/Renderer\";\r\n\r\nimport {\r\n    Square,\r\n    Type,\r\n    Color,\r\n    Piece,\r\n    Board,\r\n    Augment\r\n} from \"./Piece\";\r\n\r\nimport csq from \"./Chess_Squares\";\r\n\r\nenum MouseEvent_Button {\r\n    main, // Left\r\n    auxiliary, // Middle\r\n    secondary, // Right\r\n    fourth, // Browser back\r\n    fifth, // Browser forward\r\n}\r\n\r\ntype Move = {\r\n    file: number,\r\n    rank: number\r\n};\r\n\r\nexport default class Chess {\r\n    renderer: Renderer;\r\n    canvas: HTMLCanvasElement;\r\n\r\n    pieces: Piece[][][];\r\n    board: Board;\r\n    just_advanced: Square;\r\n    legal: Square[];\r\n    king_has_moved: boolean[];\r\n\r\n    constructor() {\r\n        // Create canvas\r\n        const main = document.querySelector('#main');\r\n        this.canvas = main.querySelector('#glCanvas');\r\n\r\n        this.board = new Array<Piece>(64);\r\n        this.renderer = new Renderer(this.canvas, this.board);\r\n\r\n        this.just_advanced = null;\r\n        this.king_has_moved = [false, false];\r\n        this.pieces = [new Array<Piece[]>(Type.COUNT), new Array<Piece[]>(Type.COUNT)];\r\n    }\r\n\r\n    get king() {\r\n        return this.pieces[this.renderer.turn][Type.King][0];\r\n    }\r\n\r\n    getMoveDirection(from_sq: Square, to_sq: Square): Move {\r\n        let file = to_sq.file - from_sq.file;\r\n        file /= file != 0 ? Math.abs(file) : 1;\r\n        let rank = to_sq.rank - from_sq.rank;\r\n        rank /= rank != 0 ? Math.abs(rank) : 1;\r\n        return {file, rank};\r\n    }\r\n\r\n    getMoveMagnitude(from_sq: Square, to_sq: Square): Move {\r\n        let file = to_sq.file - from_sq.file;\r\n        let rank = to_sq.rank - from_sq.rank;\r\n        return {file: Math.abs(file), rank: Math.abs(rank)};\r\n    }\r\n\r\n    getBlockingPiece(from_sq: Square, to_sq: Square, md: Move): Piece {\r\n        let f: number, r: number;\r\n        const cti = Square.coordinatesToIndex;\r\n\r\n        for (f = from_sq.file + md.file, r = from_sq.rank + md.rank;\r\n             f != to_sq.file || r != to_sq.rank;\r\n             f += md.file, r += md.rank) {\r\n\r\n            if (this.board[cti(f, r)]) {\r\n                return this.board[cti(f, r)];\r\n            }\r\n        }\r\n        return this.board[cti(f, r)];\r\n    }\r\n\r\n    getRookInDirection(piece: Piece, sq: Square): Piece {\r\n        // Check each rook\r\n        const [long, short] = this.pieces[piece.color][Type.Rook];\r\n        const {file: short_file} = this.getMoveDirection(piece.square, short.square);\r\n        const {file} = this.getMoveDirection(piece.square, sq);\r\n        return short_file == file ? short : long;\r\n    }\r\n\r\n    getAllLegalMoves(piece: Piece): Square[] {\r\n        const legal: Array<Square> = [];\r\n\r\n        for (let file = 0; file < 8; file++) {\r\n            for (let rank = 0; rank < 8; rank++) {\r\n                const sq = new Square;\r\n                sq.fromCoordinates(file, rank);\r\n\r\n                // Trivial move\r\n                if (sq.compare(piece.square)) continue;\r\n\r\n                // Pseudo-legal\r\n                if (!piece.isPseudoLegal(sq)) continue;\r\n\r\n                if (this.isStrictlyLegal(piece, sq)) {\r\n                    legal.push(sq);\r\n                }\r\n            }\r\n        }\r\n        return legal;\r\n    }\r\n\r\n    isBlocked(piece: Piece, from_sq: Square, to_sq: Square): Piece {\r\n        if (!piece) return null;\r\n        let md = this.getMoveDirection(from_sq, to_sq);\r\n\r\n        switch (piece.type) {\r\n            case Type.Queen:\r\n                return this.getBlockingPiece(from_sq, to_sq, md);\r\n\r\n            case Type.Rook:\r\n                // Lateral move\r\n                if (md.file * md.rank == 0) return this.getBlockingPiece(from_sq, to_sq, md);\r\n                return null;\r\n\r\n            case Type.Bishop:\r\n                // Diagonal move\r\n                if (md.file * md.rank != 0) return this.getBlockingPiece(from_sq, to_sq, md);\r\n                return null;\r\n\r\n            default:\r\n                // @note Pawns just move forwards\r\n                return this.board[to_sq.i];\r\n        }\r\n    }\r\n\r\n    isLegalCastle(piece: Piece, sq: Square): boolean {\r\n        // Not a king, any move is valid\r\n        if (piece.type != Type.King) return true;\r\n\r\n        // Normal move\r\n        const mag = this.getMoveMagnitude(piece.square, sq);\r\n        if (mag.file < 2) return true;\r\n\r\n        // King has previously moved\r\n        if (this.king_has_moved[piece.color]) return false;\r\n\r\n        const rook = this.getRookInDirection(piece, sq);\r\n        const king = this.isBlocked(rook, rook.square, piece.square);\r\n        return king && king == piece;\r\n    }\r\n\r\n    isLegalPawnCapture(piece: Piece, sq: Square): boolean {\r\n        if (piece.type != Type.Pawn) return true;\r\n\r\n        const taking = this.board[sq.i];\r\n        const md = this.getMoveDirection(piece.square, sq);\r\n\r\n        // Pawns cannot capture forwards\r\n        if (taking && md.file == 0) return false;\r\n\r\n        // Trivial move\r\n        if (!taking && md.file == 0) return true;\r\n\r\n        // En peasant\r\n        if (!taking && md.file != 0) {\r\n            const peasant = this.board[Square.coordinatesToIndex(sq.file, sq.rank - md.rank)];\r\n            return !!peasant && peasant.square.compare(this.just_advanced);\r\n        }\r\n        return !!taking;\r\n    }\r\n\r\n    isInCheck(piece?: Piece): boolean {\r\n        const opponent = this.pieces[1 - this.renderer.turn];\r\n\r\n        // Check the piece we just moved first\r\n        if (piece && piece.isPseudoLegal(this.king.square)) {\r\n            if (this.isStrictlyLegal(piece, this.king.square)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (let type of opponent) {\r\n            if (!type) continue;\r\n            for (let attacking of type) {\r\n                if (!attacking || attacking == piece) continue;\r\n                if (attacking.isPseudoLegal(this.king.square)) {\r\n                    if (this.isStrictlyLegal(attacking, this.king.square)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    putsKingInCheck(piece: Piece, sq: Square): boolean {\r\n        // Move is essentially valid, unless it steps into check\r\n        // by moving a pinned piece or moving the king into a state where he's checked\r\n        // So we simulate making the move and see if everything works\r\n        const old_sq = piece.square;\r\n        const replaced = this.movePiece(piece, sq);\r\n\r\n        const in_check = this.isInCheck();\r\n\r\n        this.movePiece(piece, old_sq);\r\n        if (replaced) {\r\n            this.movePiece(replaced, sq);\r\n        }\r\n\r\n        return in_check;\r\n    }\r\n\r\n    isStrictlyLegal(piece: Piece, sq: Square): boolean {\r\n        const taking = this.board[sq.i];\r\n\r\n        // Move takes a friendly piece\r\n        if (taking && taking.color == piece.color) return false;\r\n\r\n        // Path is blocked\r\n        if (this.isBlocked(piece, piece.square, sq) != taking) return false;\r\n\r\n        // Is not a legal castle\r\n        if (!this.isLegalCastle(piece, sq)) return false;\r\n\r\n        // Is not a legal pawn capture\r\n        if (!this.isLegalPawnCapture(piece, sq)) return false;\r\n\r\n        // Puts king into check\r\n        return !this.putsKingInCheck(piece, sq);\r\n    }\r\n\r\n    makeCastleMove(piece: Piece, sq: Square) {\r\n        const mag = this.getMoveMagnitude(piece.square, sq);\r\n\r\n        // Trivial king move\r\n        if (mag.file < 2) return;\r\n\r\n        const rook = this.getRookInDirection(piece, sq);\r\n        const md = this.getMoveDirection(piece.square, sq);\r\n\r\n        let rook_sq = new Square;\r\n        rook_sq.fromCoordinates(piece.square.file + md.file, piece.square.rank);\r\n        this.movePiece(rook, rook_sq);\r\n    }\r\n\r\n    takeEnPeasant(piece: Piece, sq: Square) {\r\n        const md = this.getMoveDirection(piece.square, sq);\r\n\r\n        // Trivial pawn move\r\n        if (md.file == 0) return;\r\n\r\n        const single_advance_w = this.renderer.turn == Color.White && sq.rank == 5;\r\n        const single_advance_b = this.renderer.turn == Color.Black && sq.rank == 1;\r\n\r\n        if (single_advance_w || single_advance_b) {\r\n            const i = Square.coordinatesToIndex(sq.file, sq.rank - md.rank);\r\n            const taking = this.board[i];\r\n            if (taking && taking.square.compare(this.just_advanced)) {\r\n                this.board[i] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    makeMoveIfLegal(piece: Piece, sq: Square) {\r\n        // If a piece is held and a non-trivial move was made\r\n        if (!piece || sq.compare(piece.square)) return;\r\n\r\n        // If a legal move was made\r\n        if (!this.legal.find(s => sq.compare(s))) return;\r\n\r\n        if (piece.type == Type.King) {\r\n            this.makeCastleMove(piece, sq);\r\n            this.king_has_moved[this.renderer.turn] = true;\r\n        }\r\n\r\n        if (piece.type == Type.Pawn) {\r\n            this.takeEnPeasant(piece, sq);\r\n            this.just_advanced = sq;\r\n        } else {\r\n            this.just_advanced = null;\r\n        }\r\n\r\n        this.movePiece(piece, sq);\r\n        setTimeout(() => this.verifyCheck(piece), 225);\r\n    }\r\n\r\n    verifyCheck(piece: Piece) {\r\n        this.renderer.turn = 1 - this.renderer.turn;\r\n        const player = this.pieces[this.renderer.turn];\r\n\r\n        if (this.isInCheck(piece)) {\r\n            const has_moves = player.some(type => type.some(p => this.getAllLegalMoves(p).length > 0));\r\n            if (!has_moves) {\r\n                const checkmate = new Event('checkmate');\r\n                document.dispatchEvent(checkmate);\r\n            }\r\n        }\r\n    }\r\n\r\n    pickupPiece(ev: MouseEvent) {\r\n        const sq = this.renderer.findSquare(ev.offsetX, ev.offsetY);\r\n        const piece = this.board[sq.i];\r\n\r\n        if (piece && piece.color == this.renderer.turn) {\r\n            this.legal = this.getAllLegalMoves(piece);\r\n            if (this.legal.length == 0) return;\r\n\r\n            this.renderer.augments = this.legal.map(move => ({\r\n                file: move.file,\r\n                rank: move.rank,\r\n                augment: this.board[move.i] ? Augment.outline : Augment.dot\r\n            }));\r\n\r\n            this.renderer.held_piece = piece;\r\n            this.renderer.held_at.x = ev.offsetX;\r\n            this.renderer.held_at.y = ev.offsetY;\r\n        }\r\n    }\r\n\r\n    movePiece(piece: Piece, to_sq: Square): Piece {\r\n        if (piece.square) {\r\n            const i = piece.square.i;\r\n            this.board[i] = null;\r\n        }\r\n\r\n        const replaced = this.board[to_sq.i];\r\n\r\n        this.board[to_sq.i] = piece;\r\n        piece.square = to_sq;\r\n        return replaced;\r\n    }\r\n\r\n    dropPiece() {\r\n        this.renderer.augments = [];\r\n        this.legal = [];\r\n        this.renderer.held_piece = undefined;\r\n    };\r\n\r\n    placePieces() {\r\n        const cti = Square.coordinatesToIndex;\r\n\r\n        // Kings and Queens\r\n        this.board[csq.e1] = new Piece('e1', Color.White, Type.King);\r\n        this.board[csq.d1] = new Piece('d1', Color.White, Type.Queen);\r\n\r\n        this.board[csq.e8] = new Piece('e8', Color.Black, Type.King);\r\n        this.board[csq.d8] = new Piece('d8', Color.Black, Type.Queen);\r\n\r\n\r\n        // Rooks\r\n        this.board[csq.h1] = new Piece('h1', Color.White, Type.Rook);\r\n        this.board[csq.a1] = new Piece('a1', Color.White, Type.Rook);\r\n\r\n        this.board[csq.h8] = new Piece('h8', Color.Black, Type.Rook);\r\n        this.board[csq.a8] = new Piece('a8', Color.Black, Type.Rook);\r\n\r\n\r\n        // Knights\r\n        this.board[csq.g1] = new Piece('g1', Color.White, Type.Knight);\r\n        this.board[csq.b1] = new Piece('b1', Color.White, Type.Knight);\r\n\r\n        this.board[csq.g8] = new Piece('g8', Color.Black, Type.Knight);\r\n        this.board[csq.b8] = new Piece('b8', Color.Black, Type.Knight);\r\n\r\n\r\n        // Bishops\r\n        this.board[csq.c1] = new Piece('c1', Color.White, Type.Bishop);\r\n        this.board[csq.f1] = new Piece('f1', Color.White, Type.Bishop);\r\n\r\n        this.board[csq.c8] = new Piece('c8', Color.Black, Type.Bishop);\r\n        this.board[csq.f8] = new Piece('f8', Color.Black, Type.Bishop);\r\n\r\n        this.pieces[Color.White][Type.Pawn] = [];\r\n        this.pieces[Color.Black][Type.Pawn] = [];\r\n\r\n        // Pawns\r\n        for (let i = 0; i < 8; i++) {\r\n            let sq = Square.coordinatesToString(i, 1);\r\n            this.board[cti(i, 1)] = new Piece(sq, Color.White, Type.Pawn);\r\n            this.pieces[Color.White][Type.Pawn].push(this.board[cti(i, 1)]);\r\n\r\n            sq = Square.coordinatesToString(i, 6);\r\n            this.board[cti(i, 6)] = new Piece(sq, Color.Black, Type.Pawn);\r\n            this.pieces[Color.Black][Type.Pawn].push(this.board[cti(i, 6)]);\r\n        }\r\n\r\n        this.pieces[Color.White][Type.Queen] = [this.board[csq.d1]];\r\n        this.pieces[Color.Black][Type.Queen] = [this.board[csq.d8]];\r\n\r\n        this.pieces[Color.White][Type.King] = [this.board[csq.e1]]\r\n        this.pieces[Color.Black][Type.King] = [this.board[csq.e8]];\r\n\r\n        this.pieces[Color.White][Type.Rook] = [this.board[csq.a1], this.board[csq.h1]];\r\n        this.pieces[Color.Black][Type.Rook] = [this.board[csq.a8], this.board[csq.h8]];\r\n\r\n        this.pieces[Color.White][Type.Bishop] = [this.board[csq.c1], this.board[csq.f1]];\r\n        this.pieces[Color.Black][Type.Bishop] = [this.board[csq.c8], this.board[csq.f8]];\r\n\r\n        this.pieces[Color.White][Type.Knight] = [this.board[csq.b1], this.board[csq.g1]];\r\n        this.pieces[Color.Black][Type.Knight] = [this.board[csq.b8], this.board[csq.g8]];\r\n    }\r\n\r\n    setEventHandlers() {\r\n        this.renderer.held_piece = undefined;\r\n        this.renderer.held_at = {x: 0, y: 0};\r\n\r\n        this.canvas.oncontextmenu = (ev: MouseEvent) => ev.preventDefault();\r\n\r\n        this.canvas.onmousedown = (ev: MouseEvent) => {\r\n            switch (ev.button) {\r\n                case MouseEvent_Button.main:\r\n                    this.pickupPiece(ev);\r\n                    break;\r\n\r\n                case MouseEvent_Button.secondary:\r\n                    this.dropPiece();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        this.canvas.onmousemove = (ev: MouseEvent) => {\r\n            // Holding\r\n            if (this.renderer.held_piece) {\r\n                this.renderer.held_at.x = ev.offsetX;\r\n                this.renderer.held_at.y = ev.offsetY;\r\n            }\r\n        }\r\n        this.canvas.onmouseout = (_: MouseEvent) => {\r\n            this.dropPiece();\r\n        }\r\n\r\n        this.canvas.onmouseup = (ev: MouseEvent) => {\r\n            const hp = this.renderer.held_piece;\r\n            if (!hp) return;\r\n\r\n            const sq = this.renderer.findSquare(ev.offsetX, ev.offsetY);\r\n            this.makeMoveIfLegal(hp, sq);\r\n            this.dropPiece();\r\n        }\r\n\r\n        window.onresize = () => this.renderer.resize();\r\n\r\n        document.addEventListener('checkmate', () => {\r\n            alert('Checkmate!');\r\n        });\r\n    }\r\n    async init() {\r\n        this.placePieces();\r\n        this.setEventHandlers();\r\n\r\n        await this.renderer.init();\r\n        this.renderer.turn = Color.White;\r\n        this.renderer.startRendering();\r\n    }\r\n\r\n}","import Chess from \"./Chess/Chess\";\r\n\r\n\r\nwindow.onload = () => {\r\n  let chess = new Chess();\r\n  chess.init();\r\n\r\n  const notesList = document.getElementById(\"notes-list\");\r\n  const notes = [\r\n    \"Move pieces holding left-click.\",\r\n    \"To cancel, drop pieces outside the board, or using right-click.\",\r\n    \"NEW: You'll now be alerted of checkmate!\"\r\n  ];\r\n\r\n  notes.forEach(note => {\r\n    const li = document.createElement('li');\r\n    li.innerText = note;\r\n    notesList.appendChild(li);\r\n  });\r\n}\r\n"],"names":["$ffed555b29fbec88$export$40339995e8a21591","$ffed555b29fbec88$export$357eb1b4f03c1402","$ffed555b29fbec88$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b6e846451b66e399$exports","URL","resolve","import","meta","url","toString","$342ac3d92c2bb6b7$exports","$f45381f7a50e801d$exports","$4ad872c26205ec7a$exports","$c6833531b01072f9$exports","$14e1f911c2f6d6c6$export$2b6a748984e845f3","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","deleteShader","vertex_shader","compile","VERTEX_SHADER","vertex","fragment_shader","FRAGMENT_SHADER","fragment","shader_program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","module","exports","$14e1f911c2f6d6c6$export$ff9e5e8a1ac0ae32","texture","$e7eeafa52b591c3c$export$9099ad97b570f7c","vao","createVertexArray","bindVertexArray","this","position","location","getAttribLocation","buffer","createBuffer","data","Float32Array","side","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","texture_uv","Uint32Array","UNSIGNED_INT","elements","Int32Array","ELEMENT_ARRAY_BUFFER","count","draw","drawElements","TRIANGLES","$323ec5cb024bd500$export$1cad442f1a6e549f","image","canvas","document","createElement","width","height","ctx","getContext","img","element","drawImage","x","y","texImage2D","TEXTURE_2D","RGBA","UNSIGNED_BYTE","createTexture","bindTexture","uploadTextureImage","Uint8Array","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","bind","slot","sampler_location","activeTexture","TEXTURE0","uniform1i","$e2523b4e14c759aa$export$98c16e1ff98bb093","factor","mat","identity","scaled","map","tuple","left","right","top","bottom","near","far","t","translated","theta","axis","c","Math","cos","s","sin","Color","Type","Augment","$1ab23bea2252c876$export$e4830c8e55b4f80d","$1ab23bea2252c876$export$5958d9379b84840c","$1ab23bea2252c876$export$b74ff77d2e7bffe2","$1ab23bea2252c876$export$b9b93345c2943ac5","coordinatesToIndex","file","rank","square1","fromString","f","charCodeAt","r","String","fromCharCode","square","fromCoordinates","coordinatesToString","compare","sq","coincideLaterally","coin","coincideDiagonally","mainDiagonal","secDiagonal","$1ab23bea2252c876$export$b91e3148df94fc16","square2","color","isPseudoLegal","King","processKing","Queen","processQueen","Knight","processKnight","Bishop","processBishop","Rook","processRook","Pawn","processPawn","df","abs","dr","White","Black","drank","dfile","direction","starting","isStartingAdvance","isCapture","isNormalAdvance","isLegal","$78cafee545574d03$export$9099ad97b570f7c","findSquare","dim","getMinimumDimension","floor","turn","prepareSquare","translate","SQUARE_SIZE","model","scale","drawBoard","augments","matrices","BOARD_SIZE","textures","board","uniforms","texture_sampler","uniformMatrix4fv","forEach","augment","dot","outline","drawPiece","piece","held_piece","held_at","asq","pieces","render","dt","Date","now","last_update","time_elapsed","uniform1f","time","clearColor","clear","COLOR_BUFFER_BIT","p","window","requestAnimationFrame","board_white_img","loadImage","$parcel$interopDefault","board_black_img","piece_img","dot_img","outline_img","images","Array","COUNT","j","create_program","useProgram","projection","getUniformLocation","view","orthographic","loadTextures","resize","viewport","startRendering","path","Promise","reject","Image","src","onload","onerror","innerWidth","screen","innerHeight","min","preserveDrawingBuffer","alpha","antialias","depth","powerPreference","premultipliedAlpha","stencil","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","$3450011ab4247cf6$var$tfm","stringToIndex","Chess_Squares","$3450011ab4247cf6$var$Chess_Squares","MouseEvent_Button","$3450011ab4247cf6$export$9099ad97b570f7c","$8be54c57a89f3dad$var$MouseEvent_Button","$8be54c57a89f3dad$export$9099ad97b570f7c","main","querySelector","renderer","just_advanced","king_has_moved","king","getMoveDirection","from_sq","to_sq","getMoveMagnitude","getBlockingPiece","md","cti","getRookInDirection","long","short","short_file","getAllLegalMoves","legal","isStrictlyLegal","push","isBlocked","isLegalCastle","rook","isLegalPawnCapture","taking","peasant","isInCheck","opponent","attacking","putsKingInCheck","old_sq","replaced","movePiece","in_check","makeCastleMove","rook_sq","takeEnPeasant","single_advance_w","single_advance_b","makeMoveIfLegal","find","setTimeout","verifyCheck","player","some","checkmate","Event","dispatchEvent","pickupPiece","ev","offsetX","offsetY","move","dropPiece","undefined","placePieces","e1","d1","e8","d8","h1","a1","h8","a8","g1","b1","g8","b8","c1","f1","c8","f8","setEventHandlers","oncontextmenu","preventDefault","onmousedown","button","secondary","onmousemove","onmouseout","_","onmouseup","hp","onresize","addEventListener","init","notesList","getElementById","note","li","innerText","appendChild"],"version":3,"file":"index.59623b2c.js.map"}